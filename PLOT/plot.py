# generated by ChatGPT 5/21

import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

GT = 3 / 2

# === Define the function you want to plot ===
def f(x, y):
    # return np.sin(x) + np.cos(y)
    # return (0.1 * x**4) + x**3 + (0.2 * y**2)
    return (1 - x)**2 + 100 * (y - x**2)**2

# === Load (x, y) points from file ===
def load_path(filename):
    data = np.loadtxt(filename)
    x = data[:, 0]
    y = data[:, 1]
    z = f(x, y)
    return x, y, z

# === Main plotting function ===
def plot_surface_with_path(path_file, save_file=""):
    # Load path
    path_x, path_y, path_z = load_path(path_file)

    # center of graph
    avg_x = np.mean(path_x)
    avg_y = np.mean(path_y)
    maxdev = np.max(abs(path_x - avg_x))
    maxdev = max(maxdev, np.max(path_y - avg_y))
    maxdev = maxdev * GT
    # Create surface mesh
    x_range = np.linspace(avg_x - maxdev, avg_x + maxdev, 50)
    y_range = np.linspace(avg_y - maxdev, avg_y + maxdev, 50)
    X, Y = np.meshgrid(x_range, y_range)
    Z = f(X, Y)
    z_min = np.min(path_z) * GT
    z_max = np.max(path_z) * GT
    Z = np.where((Z < z_min) | (Z > z_max), np.nan, Z) 

    # Plotting
    fig = plt.figure(figsize=(10, 7))
    ax = fig.add_subplot(111, projection='3d')

    # Surface plot
    ax.plot_surface(X, Y, Z, cmap='viridis', alpha=0.7, edgecolor='none', antialiased=False)

    # Path plot
    ax.plot(path_x, path_y, path_z, color='red', linewidth=2, marker='o', label='Descent Path')

    ax.set_xlabel('x')
    ax.set_ylabel('y')
    ax.set_zlabel('f(x, y)')
    ax.set_title('Gradient Descent Path on Surface')
    ax.legend()
    plt.tight_layout()

    if save_file=="":
        plt.show()
    else:
        ax.view_init(elev=90, azim=-90)
        plt.savefig(sys.argv[2], dpi=150)

# === Example usage ===
# Save this as `plot_path.py`, then run:
# python plot_path.py path.txt
if __name__ == "__main__":
    import sys
    if len(sys.argv) == 2:
        plot_surface_with_path(sys.argv[1])
    elif len(sys.argv) == 3:
        plot_surface_with_path(sys.argv[1], sys.argv[2])
    else:
        print("... debug_file.txt save_file.png")